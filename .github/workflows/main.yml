# This is a basic workflow to help you get started with Actions

name: Docker Image CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push-on-DockerHub:
    name: first_job
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: docker login
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name : Build the Docker Image for Client
        working-directory : Shopping.Client
        run: docker build -f ./Dockerfile --force-rm -t ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_CLIENT}}:latest ..
      - name : Build the Docker Image for API
        working-directory : Shopping.API
        run: docker build -f ./Dockerfile --force-rm -t ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_API}}:latest ..
      - name: Docker Hub push client
        run: docker push ${{secrets.DOCKER_REPO_CLIENT}}  
      - name: Docker Hub push api
        run: docker push ${{secrets.DOCKER_REPO_API}}

  docker_build_push_acr:
    name: 'Docker Build and Push to ACR'
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
     run:
       shell: bash
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: 'Docker Login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
 
    - name: Build the frontend image and push it to ACR
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: kinderdllacr.azurecr.io/shoppingclient:v2
        file: Shopping.Client/Dockerfile
    - name: Build the backend image and push it to ACR
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: kinderdllacr.azurecr.io/shoppingapi:v2
        file: Shopping.API/Dockerfile

  